#!/bin/bash

# PLAN for virtual applets: applets that must be created with a different name for Launrences analysis_step_version plans:
# A) Case of singleton applet that has new analysis_step ONLY because of preceeding applet change
#    1) change applet minor version (e.g. quant-rsem when align-star-pe was versioned)
#    2) continue to rely upon the alias: dnanexus:app-name-v-1-2 to find analysis_step
# B) Case of applet run by sister pipelines (e.g. quant-rsem run in both lrna-pe and lrna-se)
#    AND
# C) Case of same applet run multiple times in a single pipeline (e.g. bam-to-bigwig-stranded)
#    1) cp -rf bam-to-bigwig-stranded bam-to-bigwig-stranded-b
#    2) edit name in dxapp.json only (do not edit script name)
#       sed s/"bam-to-bigwig-stranded"/"bam-to-bigwig-stranded-b"/ < bam-to-bigwig-stranded/dxapp.json > bam-to-bigwig-stranded-b/dxapp.json
#    3) build new applet
#    4) Never check in contents of virtual applet dir.
#    5) Edit launcher to handle the new virtual applet
applet_dest=`cat ~/.dnanexus_config/DX_PROJECT_CONTEXT_NAME`
applets="merge-annotation prep-star prep-rsem prep-tophat concat-fastqs"
applets="$applets align-tophat-pe align-star-pe bam-to-bigwig-stranded quant-rsem mad-qc"
applets="$applets align-tophat-se align-star-se bam-to-bigwig-unstranded"

if [ $# -gt 0 ]; then
    if [ $1 == "?" ] || [ $1 == "-h" ] || [ $1 == "--help" ]; then
        echo "Usage: $0 [.|{project}] [{app}] [{app}]... [--test]"
        echo "    Build applets in dx project"
        echo "       project: Name of project to build in ('.' for default). Default: $applet_dest"
        echo "       app:     One or more apps to build. Default: $applets"
        echo "       --test   Must be last paramater. Say what would be done."
        exit 1
    fi
fi
if [ "$1" = "--test" ]; then
    echo "Would build '$applets' in project '$applet_dest'"
    exit 0
fi

skipped_project="nope"
if [ $# -gt 0 ]; then
    if [ "$1" != "-" ] && [ "$1" != "." ]; then
        if [ -d $1 ]; then
            #echo "First missing project as first argument.  Assuming '$applet_dest'"
            skipped_project="true"
        else
            applet_dest=$1
        fi 
    fi
    if [ $# -gt 1 ] || [ "$skipped_project" == "true" ]; then
        if [ "$skipped_project" != "true" ]; then
            shift
        fi
        applets=''
        while (( "$#" )); do
            if [ "$1" == '--test' ]; then
                echo "Would build '$applets' in project '$applet_dest'"
                exit 0
            fi
            applets="$applets ${1%/}"
            shift
        done
    fi
fi
echo "Project: $applet_dest"
echo "Apps:    $applets"

project=$(dx find projects --name "$applet_dest")
if [ -z "$project" ]
  then
    dx new project "$applet_dest" --brief
fi

for applet in $applets; do
    echo "Building $applet at $applet_dest..."
    mkdir -p ${applet}/resources/usr/bin 
    cp tools/tool_versions.py ${applet}/resources/usr/bin
    cp tools/qc_metrics.py ${applet}/resources/usr/bin
    cp tools/parse_property.py ${applet}/resources/usr/bin
    dx build "${applet}" --archive --destination "${applet_dest}:/"
    rm ${applet}/resources/usr/bin/tool_versions.py
    rm ${applet}/resources/usr/bin/qc_metrics.py
done
